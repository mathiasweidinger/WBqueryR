use_r(WBquery)
use_r("WBquery")
library(devtools)
use_r("WBquery")
devtools::load_all(".")
library(rjson)
cols <- fromJSON(https://microdata.worldbank.org/index.php/api/catalog/collections)
cols <- fromJSON("https://microdata.worldbank.org/index.php/api/catalog/collections")
cols <- fromJSON(file = "https://microdata.worldbank.org/index.php/api/catalog/collections") %>% flatten()
View(cols)
multi_join <- function(list_of_loaded_data, join_func, ...){
require("dplyr")
multi_join <- function(list_of_loaded_data, join_func, ...){
require("dplyr")
output <- Reduce(function(x, y) {join_func(x, y, ...)}, list_of_loaded_data)
return(output)
}
cols %<>% multi_join(join_func = rbind) %>% data.frame %>% tibble()
multi_join <- function(list_of_loaded_data, join_func, ...){
require("dplyr")
output <- Reduce(function(x, y) {join_func(x, y, ...)}, list_of_loaded_data)
return(output)
}
cols %<>% multi_join(join_func = rbind) %>% data.frame %>% tibble()
cols <- fromJSON(file = "https://microdata.worldbank.org/index.php/api/catalog/collections") %>% flatten()
View(cols)
cols <- cols[[3:length(cols)]]
cols <- cols[[3]:[length(cols)]]
cols <- cols[-c(1,2)]
View(cols)
cols %<>% multi_join(join_func = rbind) %>% data.frame %>% tibble()
View(cols)
View(cols)
print(cols$repositoryid)
library(WBqueryR)
?WBquery()
library(WBqueryR)
?WBquery()
?WBqueryR
??WBqueryR
library(WBqueryR)
?WBquery()
library(WBqueryR)
library(WBqueryR)
?WBquery()
library(WBqueryR)
?WBquery()
?WBquery()
library(WBqueryR)
?WBquery()
install.packages("DESCRIPTION")
# code to automatically download file(s) from WB Microdata Library
WBget <- function(id){
# load packages
require(rjson)
require(httr)
require(tidyverse)
require(magrittr)
# initiate access status vector
access <- c()
for (item in id) { # for each of the ids supplied...
# print message
message(paste("checking access requirements for item ", item, " (",match(item, id),"/",length(id),")", sep = "" ))
# get metadata for studies one by one
temp <- paste("https://microdata.worldbank.org/index.php/api/catalog/",item, sep="")
temp <- fromJSON(file = temp) %>% flatten()
temp <- temp[-27]
temp %<>% flatten() %>% data.frame()
# extract access type
access[match(item, id)] <- temp$data_access_type
# print message
message(paste("... item (", match(item,id),"/",length(id),") is of access type: ", access[match(item, id)], sep=""))
}
length(access) - length(access["public"]) -> not_public
print(length(access["public"]))
print(access)
print(not_public)
# ask whether user is already registered
message(paste(not_public," item(s) you requested are not open access. You can only proceed to download, if you are registered with World Bank Microdata Library.", sep = ""))
registered <- readline(prompt = "Do you have an existing World Bank Microdata Library account? (type y for YES, n for NO):")
# if not, stop program and display info - PROGRAMME ENDS HERE
if (registered == "n") {
message("To register with the World Bank Microdata Library, please visit https://microdata.worldbank.org/index.php/auth/register. Rerun WBget() once you are registered.")
}
# if yes, proceed to log on
else{
message(paste("We will need to log you in. Please, enter your login details for World Bank Microdata Library"))
email <- readline(prompt="Email Address: ")
pw <- readline(prompt="Password: ")
}
}
ids <- c("AFG_2020_VOLREP_v01_M", "AFG_2021_WBCS_v01_M", "AFG_2019_LIS_v01_M",
"AFG_2019_VOLREP_v01_M", "AFG_2018_SPA_v01_M", "AFG_2018_VOLREP_v01_M",
"AFG_2018_WBCS_v01_M", "AFG_2017_FINDEX_v02_M", "AFG_2017_SABER-SD_v01_M",
"AFG_2017_SEA-HER_v01_M", "AFG_2017_SEA-KHO_v01_M", "AFG_2016_VOLREP_v01_M")
WBget(ids)
WBget <- function(id){
# load packages
require(rjson)
require(httr)
require(tidyverse)
require(magrittr)
# initiate access status vector
access <- c()
for (item in id) { # for each of the ids supplied...
# print message
message(paste("checking access requirements for item ", item, " (",match(item, id),"/",length(id),")", sep = "" ))
# get metadata for studies one by one
temp <- paste("https://microdata.worldbank.org/index.php/api/catalog/",item, sep="")
temp <- fromJSON(file = temp) %>% flatten()
temp <- temp[-27]
temp %<>% flatten() %>% data.frame()
# extract access type
access[match(item, id)] <- temp$data_access_type
# print message
message(paste("... item (", match(item,id),"/",length(id),") is of access type: ", access[match(item, id)], sep=""))
}
length(access) - length(which(access == "public")) -> not_public
print(which(access(access == "public")))
print(access)
print(not_public)
# ask whether user is already registered
message(paste(not_public," item(s) you requested are not open access. You can only proceed to download, if you are registered with World Bank Microdata Library.", sep = ""))
registered <- readline(prompt = "Do you have an existing World Bank Microdata Library account? (type y for YES, n for NO):")
# if not, stop program and display info - PROGRAMME ENDS HERE
if (registered == "n") {
message("To register with the World Bank Microdata Library, please visit https://microdata.worldbank.org/index.php/auth/register. Rerun WBget() once you are registered.")
}
# if yes, proceed to log on
else{
message(paste("We will need to log you in. Please, enter your login details for World Bank Microdata Library"))
email <- readline(prompt="Email Address: ")
pw <- readline(prompt="Password: ")
}
}
ids <- c("AFG_2020_VOLREP_v01_M", "AFG_2021_WBCS_v01_M", "AFG_2019_LIS_v01_M",
"AFG_2019_VOLREP_v01_M", "AFG_2018_SPA_v01_M", "AFG_2018_VOLREP_v01_M",
"AFG_2018_WBCS_v01_M", "AFG_2017_FINDEX_v02_M", "AFG_2017_SABER-SD_v01_M",
"AFG_2017_SEA-HER_v01_M", "AFG_2017_SEA-KHO_v01_M", "AFG_2016_VOLREP_v01_M")
WBget(ids)
# code to automatically download file(s) from WB Microdata Library
WBget <- function(id){
# load packages
require(rjson)
require(httr)
require(tidyverse)
require(magrittr)
# initiate access status vector
access <- c()
for (item in id) { # for each of the ids supplied...
# print message
message(paste("checking access requirements for item ", item, " (",match(item, id),"/",length(id),")", sep = "" ))
# get metadata for studies one by one
temp <- paste("https://microdata.worldbank.org/index.php/api/catalog/",item, sep="")
temp <- fromJSON(file = temp) %>% flatten()
temp <- temp[-27]
temp %<>% flatten() %>% data.frame()
# extract access type
access[match(item, id)] <- temp$data_access_type
# print message
message(paste("... item (", match(item,id),"/",length(id),") is of access type: ", access[match(item, id)], sep=""))
}
length(access) - length(which(access == "public")) -> not_public
print(which(access == "public"))
print(access)
print(not_public)
# ask whether user is already registered
message(paste(not_public," item(s) you requested are not open access. You can only proceed to download, if you are registered with World Bank Microdata Library.", sep = ""))
registered <- readline(prompt = "Do you have an existing World Bank Microdata Library account? (type y for YES, n for NO):")
# if not, stop program and display info - PROGRAMME ENDS HERE
if (registered == "n") {
message("To register with the World Bank Microdata Library, please visit https://microdata.worldbank.org/index.php/auth/register. Rerun WBget() once you are registered.")
}
# if yes, proceed to log on
else{
message(paste("We will need to log you in. Please, enter your login details for World Bank Microdata Library"))
email <- readline(prompt="Email Address: ")
pw <- readline(prompt="Password: ")
}
}
ids <- c("AFG_2020_VOLREP_v01_M", "AFG_2021_WBCS_v01_M", "AFG_2019_LIS_v01_M",
"AFG_2019_VOLREP_v01_M", "AFG_2018_SPA_v01_M", "AFG_2018_VOLREP_v01_M",
"AFG_2018_WBCS_v01_M", "AFG_2017_FINDEX_v02_M", "AFG_2017_SABER-SD_v01_M",
"AFG_2017_SEA-HER_v01_M", "AFG_2017_SEA-KHO_v01_M", "AFG_2016_VOLREP_v01_M")
WBget(ids)
WBget <- function(id){
# load packages
require(rjson)
require(httr)
require(tidyverse)
require(magrittr)
# initiate access status vector
access <- c()
for (item in id) { # for each of the ids supplied...
# print message
message(paste("checking access requirements for item ", item, " (",match(item, id),"/",length(id),")", sep = "" ))
# get metadata for studies one by one
temp <- paste("https://microdata.worldbank.org/index.php/api/catalog/",item, sep="")
temp <- fromJSON(file = temp) %>% flatten()
temp <- temp[-27]
temp %<>% flatten() %>% data.frame()
# extract access type
access[match(item, id)] <- temp$data_access_type
# print message
message(paste("... item (", match(item,id),"/",length(id),") is of access type: ", access[match(item, id)], sep=""))
}
length(access) - length(which(access == "public")) -> not_public
# ask whether user is already registered
warning(paste(not_public," item(s) you requested are not open access. You can only proceed to download, if you are registered with World Bank Microdata Library.", sep = ""))
registered <- readline(prompt = "Do you have an existing World Bank Microdata Library account? (type y for YES, n for NO):")
# if not, stop program and display info - PROGRAMME ENDS HERE
if (registered == "n") {
message("To register with the World Bank Microdata Library, please visit https://microdata.worldbank.org/index.php/auth/register. Rerun WBget() once you are registered.")
}
# if yes, proceed to log on
else{
message(paste("We will need to log you in. Please, enter your login details for World Bank Microdata Library"))
email <- readline(prompt="Email Address: ")
pw <- readline(prompt="Password: ")
}
}
ids <- c("AFG_2020_VOLREP_v01_M", "AFG_2021_WBCS_v01_M", "AFG_2019_LIS_v01_M",
"AFG_2019_VOLREP_v01_M", "AFG_2018_SPA_v01_M", "AFG_2018_VOLREP_v01_M",
"AFG_2018_WBCS_v01_M", "AFG_2017_FINDEX_v02_M", "AFG_2017_SABER-SD_v01_M",
"AFG_2017_SEA-HER_v01_M", "AFG_2017_SEA-KHO_v01_M", "AFG_2016_VOLREP_v01_M")
WBget(ids)
# code to automatically download file(s) from WB Microdata Library
WBget <- function(id){
# load packages
require(rjson)
require(httr)
require(tidyverse)
require(magrittr)
# initiate access status vector
access <- c()
for (item in id) { # for each of the ids supplied...
# print message
message(paste("checking access requirements for item ", item, " (",match(item, id),"/",length(id),")", sep = "" ))
# get metadata for studies one by one
temp <- paste("https://microdata.worldbank.org/index.php/api/catalog/",item, sep="")
temp <- fromJSON(file = temp) %>% flatten()
temp <- temp[-27]
temp %<>% flatten() %>% data.frame()
# extract access type
access[match(item, id)] <- temp$data_access_type
# print message
message(paste("... item (", match(item,id),"/",length(id),") is of access type: ", access[match(item, id)], sep=""))
}
length(access) - length(which(access == "public")) -> not_public
# ask whether user is already registered
warning(paste(not_public," item(s) you requested are not open access. You can only proceed to download, if you are registered with World Bank Microdata Library.", sep = ""),immediate. = TRUE)
registered <- readline(prompt = "Do you have an existing World Bank Microdata Library account? (type y for YES, n for NO):")
# if not, stop program and display info - PROGRAMME ENDS HERE
if (registered == "n") {
message("To register with the World Bank Microdata Library, please visit https://microdata.worldbank.org/index.php/auth/register. Rerun WBget() once you are registered.")
}
# if yes, proceed to log on
else{
message(paste("We will need to log you in. Please, enter your login details for World Bank Microdata Library"))
email <- readline(prompt="Email Address: ")
pw <- readline(prompt="Password: ")
}
}
ids <- c("AFG_2020_VOLREP_v01_M", "AFG_2021_WBCS_v01_M", "AFG_2019_LIS_v01_M",
"AFG_2019_VOLREP_v01_M", "AFG_2018_SPA_v01_M", "AFG_2018_VOLREP_v01_M",
"AFG_2018_WBCS_v01_M", "AFG_2017_FINDEX_v02_M", "AFG_2017_SABER-SD_v01_M",
"AFG_2017_SEA-HER_v01_M", "AFG_2017_SEA-KHO_v01_M", "AFG_2016_VOLREP_v01_M")
WBget(ids)
library(WBqueryR)
?WBqueryR::WBget()
library(WBqueryR)
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(country = "malawi"))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(country = "malawi", collection = "lsms"))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(id = 4322))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(id = "4322"))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(id = "4322", idno = "KEN_2019_EIS_v01_M"))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(collection = "lsms", id = "4322", idno = "KEN_2019_EIS_v01_M"))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(collection = "lsms", id = "4322", inc_iso = TRUE))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(collection = "lsms", "id" = "4322", inc_iso = TRUE))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(collection = "lsms", ID = "4322", inc_iso = TRUE))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(collection = "lsms", ID = 4322, inc_iso = TRUE))
status_code(r)
str(content(r))
library(httr)
r <- GET("http://microdata.worldbank.org/index.php/api/catalog/search",
query = list(collection = "lsms", ID = int(4322), inc_iso = TRUE))
status_code(r)
str(content(r))
